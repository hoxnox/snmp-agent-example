# Find AGENT++
# Merder Kim <hoxnox@gmail.com>
# 
# input:
#  AGENTXX_ROOT
#  AGENTXX_USE_STATIC_LIBS
#
# output:
#  AGENTXX_FOUND
#  AGENTXX_INCLUDE_DIR
#  AGENTXX_LIBRARIES
#

if(AGENTXX_INCLUDE_DIR AND AGENTXX_LIBRARIES)
	set(AGENTXX_FIND_QUITELY TRUE) # cached
endif(AGENTXX_INCLUDE_DIR AND AGENTXX_LIBRARIES)

if(NOT DEFINED AGENTXX_ROOT)
	set(AGENTXX_ROOT /usr /usr/local $ENV{AGENTXX_ROOT})
endif(NOT DEFINED AGENTXX_ROOT)

find_path(AGENTXX_INCLUDE_DIR agent_pp/agent++.h
	PATHS ${AGENTXX_ROOT}
	PATH_SUFFIXES agent_pp/include include
)

if( AGENTXX_USE_STATIC_LIBS )
	set( _agentxx_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES})
	if(WIN32)
		set(CMAKE_FIND_LIBRARY_SUFFIXES .lib .a ${CMAKE_FIND_LIBRARY_SUFFIXES})
	else()
		set(CMAKE_FIND_LIBRARY_SUFFIXES .a )
	endif()
endif()

find_library(AGENTXX_LIBRARIES
	NAMES agent++
	PATHS ${AGENTXX_ROOT}
	PATH_SUFFIXES lib
)
mark_as_advanced(AGENTXX_INCLUDE_DIR AGENTXX_LIBRARIES)

# Restore the original find library ordering
if( AGENTXX_USE_STATIC_LIBS )
	set(CMAKE_FIND_LIBRARY_SUFFIXES ${_agentxx_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES})
endif()

include("${CMAKE_ROOT}/Modules/FindPackageHandleStandardArgs.cmake")
FIND_PACKAGE_HANDLE_STANDARD_ARGS(AgentXX DEFAULT_MSG AGENTXX_INCLUDE_DIR AGENTXX_LIBRARIES)


