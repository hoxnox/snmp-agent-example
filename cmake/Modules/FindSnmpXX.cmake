# Find SNMP++
# Merder Kim <hoxnox@gmail.com>
# 
# input:
#  SNMPXX_ROOT
#  SNMPXX_USE_STATIC_LIBS
#
# output:
#  SNMPXX_FOUND
#  SNMPXX_INCLUDE_DIR
#  SNMPXX_LIBRARIES
#

if(SNMPXX_INCLUDE_DIR AND SNMPXX_LIBRARIES)
	set(SNMPXX_FIND_QUITELY TRUE) # cached
endif(SNMPXX_INCLUDE_DIR AND SNMPXX_LIBRARIES)

if(NOT DEFINED SNMPXX_ROOT)
	set(SNMPXX_ROOT /usr /usr/local $ENV{SNMPXX_ROOT})
endif(NOT DEFINED SNMPXX_ROOT)

find_path(SNMPXX_INCLUDE_DIR snmp_pp/snmp_pp.h
	PATHS ${SNMPXX_ROOT}
	PATH_SUFFIXES snmp_pp/include include
)

if( SNMPXX_USE_STATIC_LIBS )
	set( _snmpxx_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES})
	if(WIN32)
		set(CMAKE_FIND_LIBRARY_SUFFIXES .lib .a ${CMAKE_FIND_LIBRARY_SUFFIXES})
	else()
		set(CMAKE_FIND_LIBRARY_SUFFIXES .a )
	endif()
endif()

find_library(SNMPXX_LIBRARIES
	NAMES snmp++
	PATHS ${SNMPXX_ROOT}
	PATH_SUFFIXES lib
)
mark_as_advanced(SNMPXX_INCLUDE_DIR SNMPXX_LIBRARIES)

# Restore the original find library ordering
if( SNMPXX_USE_STATIC_LIBS )
	set(CMAKE_FIND_LIBRARY_SUFFIXES ${_snmpxx_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES})
endif()

include("${CMAKE_ROOT}/Modules/FindPackageHandleStandardArgs.cmake")
FIND_PACKAGE_HANDLE_STANDARD_ARGS(SnmpXX DEFAULT_MSG SNMPXX_INCLUDE_DIR SNMPXX_LIBRARIES)


